<?php
require 'application.php';
require_once dirname(__file__)."/zsb_controller.php";
require_once dirname(__file__).'/../models/Fristen.class.php';
require_once dirname(__file__).'/../models/PersonalRechte.php';
require_once dirname(__file__).'/../models/StgProfil.class.php';
require_once dirname(__file__).'/../models/StgFile.class.php';
require_once dirname(__file__).'/../models/StgAnsprechpartner.class.php';
if (!class_exists("DBHelper")) {
    include_once dirname(__file__).'/../models/DBHelper.class.php';
}

//Laden von Extensions wie speziellen lokalen Erweiterungen in Oldenburg:
$extension_folder=opendir(dirname(__file__)."/extensions/");
while (($file = readdir($extension_folder))!==false) {
    if (!is_dir(dirname(__file__)."/extensions/".$file)
            && strpos($file, ".") !== 0
            && strpos($file, ".php") !== false) {
        include_once dirname(__file__)."/extensions/".$file;
    }
}
closedir($extension_folder);


class ZsbFachkombinationController extends ZSBController {
    
    function before_filter($action, $args) {
        parent::before_filter($action, $args);
        if (!PersonalRechte::hasPermission()) {
            throw new AccessDeniedException(_("Unbefugter Zutritt!"));
            return;
        }
        PageLayout::addStylesheet('ui.multiselect.css');
        PageLayout::addScript('ui.multiselect.js');
    }

    public function fach_kombinationen_action() {
        $db = DBManager::get();
        if (!PersonalRechte::isRoot()) {
            throw new AccessDeniedException(_("Sie sind weder Root noch Angestellter der ZSB."));
            return;
        }
        
        $this->url = $this->link_for("zsb_fachkombination/fach_kombinationen");
        if (Request::get("absenden_x")) {
            if (Request::get("fach_kombi_id")) {
                $exists = $db->query("SELECT 1 FROM stg_fach_kombination " .
                                    "WHERE fach_kombi_id != ".$db->quote(Request::get("fach_kombi_id"))." " .
                                        "AND ( " .
                                            "(stg_profil_id = ".$db->quote(Request::get("stg_profil_id"))." AND kombi_stg_profil_id = ".$db->quote(Request::get("kombi_stg_profil_id")).")".
                                            "OR (stg_profil_id = ".$db->quote(Request::get("kombi_stg_profil_id"))." AND kombi_stg_profil_id = ".$db->quote(Request::get("stg_profil_id")).") " .
                                        ") ")->fetch();
                if (!$exists) {
                    $db->query("UPDATE stg_fach_kombination " .
                              "SET stg_profil_id = ".$db->quote(Request::get("stg_profil_id")).", " .
                                  "kombi_stg_profil_id = ".$db->quote(Request::get("kombi_stg_profil_id")).", " .
                                  "beschreibung = ".$db->quote(Request::get("beschreibung"))." " .
                              "WHERE fach_kombi_id = ".$db->quote(Request::get("fach_kombi_id"))." ");
                    $this->flash_now("success", _("Änderungen wurden übernommen"));
                } else {
                    $this->flash_now("error", _("So eine Kombination ist schon vergeben. Es wurde nichts geändert."));
                }
            } else {
                $exists = $db->query("SELECT 1 FROM stg_fach_kombination " .
                                    "WHERE " .
                                        "( " .
                                            "(stg_profil_id = ".$db->quote(Request::get("stg_profil_id"))." AND kombi_stg_profil_id = ".$db->quote(Request::get("kombi_stg_profil_id")).")".
                                            "OR (stg_profil_id = ".$db->quote(Request::get("kombi_stg_profil_id"))." AND kombi_stg_profil_id = ".$db->quote(Request::get("stg_profil_id")).") " .
                                        ") ")->fetch();
                if (!$exists) {
                    $db->query("INSERT INTO stg_fach_kombination " .
                               "SET stg_profil_id = ".$db->quote(Request::get("stg_profil_id")).", " .
                                   "kombi_stg_profil_id = ".$db->quote(Request::get("kombi_stg_profil_id")).", " .
                                   "beschreibung = ".$db->quote(Request::get("beschreibung"))." ");
                    $this->flash_now("success", _("Fächerkombination wurde angelegt."));
                } else {
                    $this->flash_now("error", _("So eine Kombination ist schon vergeben. Es wurde nichts angelegt."));
                }
            }
        }
        if (Request::get("delete_x") && Request::get("fach_kombi_id")) {
            $db->exec("DELETE FROM stg_fach_kombination WHERE fach_kombi_id = ".$db->quote(Request::get("fach_kombi_id")));
            $this->flash_now("success", _("Fächerkombination gelöscht"));
        } elseif (Request::get("fach_kombi_id")) {
            $this->fach_kombination_details(Request::get("fach_kombi_id"));
            return;
        }
        //alle Kombinationsfächer finden:
        $this->kombinationen = $db->query("SELECT * FROM stg_fach_kombination")->fetchAll();
    }
    
    public function fach_kombination_details($fach_kombi_id) {
        if (!PersonalRechte::isRoot()) {
            throw new AccessDeniedException(_("Sie sind weder Root noch Angestellter der ZSB."));
            return;
        }
        $db = DBManager::get();
        
        $this->kombination = $db->query("SELECT stg_fach_kombination.* " .
                                "FROM stg_fach_kombination " .
                                "WHERE fach_kombi_id = ".$db->quote($fach_kombi_id))->fetch(PDO::FETCH_ASSOC);
        
        $this->profilsuche = $this->getProfilSuche();
        
        $this->render_template('zsb_fachkombination/details_fachkombi', $this->layout);
        
    }
    
}

